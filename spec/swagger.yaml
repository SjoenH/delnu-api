{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "delnu-api ",
    "description": "TODO: Add Description",
    "license": {
      "name": "MIT",
      "url": "http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT"
    }
  },
  "host": "it2810-02.idi.ntnu.no:2000",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "description": "This route returns a JWT and the user that atempted to login.",
        "operationId": "Login an existing user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/auth/login",
              "headers": {
                "Content-Type": "application/x-www-form-urlencoded"
              },
              "body": "email=mariusomoe@gmail.com&password=test"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "KEYS",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {
                "Access-Control-Allow-Credentials": "true",
                "Access-Control-Allow-Headers": "Origin, X-Requested-With, Content-Type, Accept, Authorization, Access-Control-Allow-Credentials",
                "Access-Control-Allow-Methods": "PUT, GET, POST, DELETE, OPTIONS",
                "Connection": "keep-alive",
                "Content-Length": "496",
                "Content-Type": "application/json; charset=utf-8",
                "Date": "Thu, 20 Oct 2016 09:46:32 GMT",
                "ETag": "W/\"1f0-6U3lg5EF+cCFA9Kn7o91fw\"",
                "X-Powered-By": "Express"
              },
              "body": "{\n    \"token\": \"JWT eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ODA4OTE1MDZlOGU5YjY3NTE3ZjMyYzQiLCJmaXJzdE5hbWUiOiJNYXJpdXMiLCJsYXN0TmFtZSI6Ik1vZSIsImVtYWlsIjoibWFyaXVzb21vZUBnbWFpbC5jb20iLCJyb2xlIjoiTWVtYmVyIiwiaWF0IjoxNDc2OTU2NzkyLCJleHAiOjE0NzY5NjY4NzJ9.kITwfRVC8DsQWZN2OLdRTmxL2KyVAtjJUzxUFflfa94\",\n    \"user\": {\n        \"_id\": \"580891506e8e9b67517f32c4\",\n        \"firstName\": \"Marius\",\n        \"lastName\": \"Moe\",\n        \"email\": \"mariusomoe@gmail.com\",\n        \"role\": \"Member\"\n    }\n}"
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Login an existing user",
            "x-testDescription": "This route returns a JWT and the user that atempted to login."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/articles/recently_viewed": {
      "get": {
        "description": "Returns the three most recently viewed articles of this user",
        "tags": [
          "Article"
        ],
        "operationId": "Recently viewed ",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecentlyviewedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/articles/recently_viewed",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{\n\t\"email\": \"marius@test.no\"\n}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Recently viewed ",
            "x-testDescription": "Returns the three most recently viewed articles of this user"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/auth/delete_my_account": {
      "delete": {
        "description": "This will delete your account. The user to be deleted is determined by the JWT.",
        "operationId": "Delete my account",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "DELETE",
              "uri": "/auth/delete_my_account"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Delete my account",
            "x-testDescription": "This will delete your account. The user to be deleted is determined by the JWT."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/articles/upload_article_images": {
      "post": {
        "description": "Add upto four images. This route is not testable.",
        "operationId": "Upload article images ",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "//Content-Type",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/articles/upload_article_images",
              "headers": {
                "//Content-Type": "application/json"
              }
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Upload article images ",
            "x-testDescription": "Add upto four images. This route is not testable."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/auth/confirm_account/:confirmation_string": {
      "get": {
        "description": "Simply following this link with the provided param will activate the corresponding user. ",
        "operationId": "Confirm account",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "confirmation_string",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/auth/confirm_account/:confirmation_string?confirmation_string=",
              "headers": {
                "Content-Type": "application/x-www-form-urlencoded"
              },
              "body": "email=mariusomoe@gmail.com&password=test"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Confirm account",
            "x-testDescription": "Simply following this link with the provided param will activate the corresponding user. "
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/auth/request_new_email_confirmation": {
      "post": {
        "description": "This route will send a new email with a new confirmation link to the user withe the provided email address.",
        "operationId": "Request new confirmation link",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/auth/request_new_email_confirmation",
              "headers": {
                "Content-Type": "application/x-www-form-urlencoded"
              },
              "body": "email=mariusomoe@gmail.com"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Request new confirmation link",
            "x-testDescription": "This route will send a new email with a new confirmation link to the user withe the provided email address."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/articles/all": {
      "get": {
        "description": "This route will return a list of all articles that is stored in the database. This route is resticted to loged in users.",
        "operationId": "Retrieve all articles ",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/articles/all"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Retrieve all articles ",
            "x-testDescription": "This route will return a list of all articles that is stored in the database. This route is resticted to loged in users."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/auth/register": {
      "post": {
        "description": "Register a user. This user will have \"Member\" rights.",
        "operationId": "Register a new user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "firstName",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "lastName",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/auth/register",
              "headers": {
                "Content-Type": "application/x-www-form-urlencoded"
              },
              "body": "email=mariusomoe@gmail.com&password=test&firstName=Lars&lastName=skaugvoll"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Register a new user",
            "x-testDescription": "Register a user. This user will have \"Member\" rights."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/articles/add_article": {
      "post": {
        "description": "Add one new article with this user as owner",
        "tags": [
          "Article"
        ],
        "operationId": "Add article ",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddarticleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/articles/add_article",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": " {\n\t\"name\": \"drill\",\n\t\"intro\":  \"stor og fin drill\",\n\t\"txt\": \"Denne drillen kan en drille hele dagen med baade paa jobb og andre steder\",\n\t\"price\": 22,\n\t\"imgLink\": [\"http://www.clasohlson.com/medias/sys_master/8885964701726.jpg\"],\n\t\"tags\": [\"megatag\", \"endaentag\"],\n\t\"_owner\": \"324657543\",\n\t\"fromDate\": \"2012-04-23T18:25:43.511Z\",\n\t\"toDate\": \"2012-04-23T18:25:43.511Z\",\n\t\"active\": true,\n\t\"location\": {\n\t  \"lat\": 63.4,\n\t  \"lng\": 10.4\n\t}\n}\n"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Add article ",
            "x-testDescription": "Add one new article with this user as owner"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/auth/test_auth_route": {
      "get": {
        "description": "This route will return a JWT, the user that is loged in and a short text. This route is resticted to loged in users. ",
        "operationId": "Authentication test route",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/auth/test_auth_route",
              "headers": {
                "Content-Type": "application/x-www-form-urlencoded"
              },
              "body": "email=mariusomoe@gmail.com&password=test"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Authentication test route",
            "x-testDescription": "This route will return a JWT, the user that is loged in and a short text. This route is resticted to loged in users. "
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/auth/change_email": {
      "post": {
        "description": "Change email - need to be loged in.",
        "tags": [
          "Auth"
        ],
        "operationId": "Change email ",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeemailRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/auth/change_email",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{\n\t\"email\": \"marius@test.no\"\n}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Change email ",
            "x-testDescription": "Change email - need to be loged in."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/articles/filtered": {
      "get": {
        "description": "Search articles.\n\nsearch params contain - filterOptions, fromIndex and sorting method.",
        "tags": [
          "Article"
        ],
        "operationId": "Filtered search ",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilteredsearchRequest"
            }
          },
          {
            "name": "search",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/articles/filtered",
              "headers": {
                "Content-Type": "application/json",
                "search": "params"
              },
              "body": "{\n\t\"email\": \"marius@test.no\"\n}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Filtered search ",
            "x-testDescription": "Search articles.\n\nsearch params contain - filterOptions, fromIndex and sorting method."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/articles/byid": {
      "get": {
        "description": "Get one article with the given ID. Need to bee sent to server so we can maintain recently viewed articles and have bookmark functionality. ",
        "tags": [
          "Article"
        ],
        "operationId": "Get one article by ID ",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetonearticlebyIDRequest"
            }
          },
          {
            "name": "search",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/articles/byid",
              "headers": {
                "Content-Type": "application/json",
                "search": "params"
              },
              "body": "{\n\t\"email\": \"marius@test.no\"\n}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Get one article by ID ",
            "x-testDescription": "Get one article with the given ID. Need to bee sent to server so we can maintain recently viewed articles and have bookmark functionality. "
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/auth/get_new_token": {
      "get": {
        "description": "Ask for new token. If the token is about to expire and the user is still active a request for a fresh token will be issued. It uses the soon to be too old token as credentials.",
        "tags": [
          "Auth"
        ],
        "operationId": "Ask for new token ",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AskfornewtokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/auth/get_new_token",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{\n\t\"email\": \"marius@test.no\"\n}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Ask for new token ",
            "x-testDescription": "Ask for new token. If the token is about to expire and the user is still active a request for a fresh token will be issued. It uses the soon to be too old token as credentials."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    }
  },
  "definitions": {
    "RecentlyviewedRequest": {
      "title": "Recently viewed Request",
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      },
      "required": [
        "email"
      ]
    },
    "AddarticleRequest": {
      "title": "Add article Request",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "intro": {
          "type": "string"
        },
        "txt": {
          "type": "string"
        },
        "price": {
          "type": "integer",
          "format": "int32"
        },
        "imgLink": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "_owner": {
          "type": "string"
        },
        "fromDate": {
          "type": "string"
        },
        "toDate": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "location": {
          "$ref": "#/definitions/Location"
        }
      },
      "required": [
        "name",
        "intro",
        "txt",
        "price",
        "imgLink",
        "tags",
        "_owner",
        "fromDate",
        "toDate",
        "active",
        "location"
      ]
    },
    "Location": {
      "title": "Location",
      "type": "object",
      "properties": {
        "lat": {
          "type": "number",
          "format": "double"
        },
        "lng": {
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "lat",
        "lng"
      ]
    },
    "ChangeemailRequest": {
      "title": "Change email Request",
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      },
      "required": [
        "email"
      ]
    },
    "FilteredsearchRequest": {
      "title": "Filtered search Request",
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      },
      "required": [
        "email"
      ]
    },
    "GetonearticlebyIDRequest": {
      "title": "Get one article by ID Request",
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      },
      "required": [
        "email"
      ]
    },
    "AskfornewtokenRequest": {
      "title": "Ask for new token Request",
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      },
      "required": [
        "email"
      ]
    }
  }
}
