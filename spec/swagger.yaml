swagger: 2.0
info:
  version: 1.0
  title: 'delnu-api '
  description: 'TODO: Add Description'
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: it2810-02.idi.ntnu.no:2000
basePath: /api
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
  /auth/login:
    post:
      description: This route returns a JWT and the user that atempted to login.
      operationId: Login an existing user
      produces:
      - application/json
      parameters:
      - name: email
        in: formData
        required: true
        type: string
      - name: password
        in: formData
        required: true
        type: string
      responses:
        200:
          description: 
          schema:
            type: string
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /auth/login
          headers:
            Content-Type: application/x-www-form-urlencoded
          body: email=mariusomoe@gmail.com&password=test
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: KEYS
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers:
            Access-Control-Allow-Credentials: true
            Access-Control-Allow-Headers: Origin, X-Requested-With, Content-Type, Accept, Authorization, Access-Control-Allow-Credentials
            Access-Control-Allow-Methods: PUT, GET, POST, DELETE, OPTIONS
            Connection: keep-alive
            Content-Length: 496
            Content-Type: application/json; charset=utf-8
            Date: Thu, 20 Oct 2016 09:46:32 GMT
            ETag: W/"1f0-6U3lg5EF+cCFA9Kn7o91fw"
            X-Powered-By: Express
          body: >-
            {
                "token": "JWT eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ODA4OTE1MDZlOGU5YjY3NTE3ZjMyYzQiLCJmaXJzdE5hbWUiOiJNYXJpdXMiLCJsYXN0TmFtZSI6Ik1vZSIsImVtYWlsIjoibWFyaXVzb21vZUBnbWFpbC5jb20iLCJyb2xlIjoiTWVtYmVyIiwiaWF0IjoxNDc2OTU2NzkyLCJleHAiOjE0NzY5NjY4NzJ9.kITwfRVC8DsQWZN2OLdRTmxL2KyVAtjJUzxUFflfa94",
                "user": {
                    "_id": "580891506e8e9b67517f32c4",
                    "firstName": "Marius",
                    "lastName": "Moe",
                    "email": "mariusomoe@gmail.com",
                    "role": "Member"
                }
            }
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Login an existing user
        x-testDescription: This route returns a JWT and the user that atempted to login.
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /articles/recently_viewed:
    get:
      description: Returns the three most recently viewed articles of this user
      tags:
      - Article
      operationId: 'Recently viewed '
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        schema:
          $ref: '#/definitions/RecentlyViewedRequest'
      responses:
        200:
          description: 
      security: []
      x-unitTests:
      - request:
          method: GET
          uri: /articles/recently_viewed
          headers:
            Content-Type: application/json
          body: >-
            {
            	"email": "marius@test.no"
            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: 'Recently viewed '
        x-testDescription: Returns the three most recently viewed articles of this user
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /auth/delete_my_account:
    delete:
      description: This will delete your account. The user to be deleted is determined by the JWT.
      operationId: Delete my account
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: 
      security: []
      x-unitTests:
      - request:
          method: DELETE
          uri: /auth/delete_my_account
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Delete my account
        x-testDescription: This will delete your account. The user to be deleted is determined by the JWT.
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /articles/upload_article_images:
    post:
      description: Add upto four images. This route is not testable.
      operationId: 'Upload article images '
      produces:
      - application/json
      parameters:
      - name: //Content-Type
        in: header
        required: true
        type: string
      responses:
        200:
          description: 
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /articles/upload_article_images
          headers:
            //Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: 'Upload article images '
        x-testDescription: Add upto four images. This route is not testable.
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /auth/confirm_account/:confirmation_string:
    get:
      description: 'Simply following this link with the provided param will activate the corresponding user. '
      operationId: Confirm account
      produces:
      - application/json
      parameters:
      - name: confirmation_string
        in: path
        required: true
        type: string
      - name: email
        in: formData
        required: true
        type: string
      - name: password
        in: formData
        required: true
        type: string
      responses:
        200:
          description: 
      security: []
      x-unitTests:
      - request:
          method: GET
          uri: /auth/confirm_account/:confirmation_string?confirmation_string=
          headers:
            Content-Type: application/x-www-form-urlencoded
          body: email=mariusomoe@gmail.com&password=test
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Confirm account
        x-testDescription: 'Simply following this link with the provided param will activate the corresponding user. '
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /auth/request_new_email_confirmation:
    post:
      description: This route will send a new email with a new confirmation link to the user withe the provided email address.
      operationId: Request new confirmation link
      produces:
      - application/json
      parameters:
      - name: email
        in: formData
        required: true
        type: string
      responses:
        200:
          description: 
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /auth/request_new_email_confirmation
          headers:
            Content-Type: application/x-www-form-urlencoded
          body: email=mariusomoe@gmail.com
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Request new confirmation link
        x-testDescription: This route will send a new email with a new confirmation link to the user withe the provided email address.
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /articles/all:
    get:
      description: This route will return a list of all articles that is stored in the database. This route is resticted to loged in users.
      operationId: 'Retrieve all articles '
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: 
      security: []
      x-unitTests:
      - request:
          method: GET
          uri: /articles/all
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: 'Retrieve all articles '
        x-testDescription: This route will return a list of all articles that is stored in the database. This route is resticted to loged in users.
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /auth/register:
    post:
      description: Register a user. This user will have "Member" rights.
      operationId: Register a new user
      produces:
      - application/json
      parameters:
      - name: email
        in: formData
        required: true
        type: string
      - name: password
        in: formData
        required: true
        type: string
      - name: firstName
        in: formData
        required: true
        type: string
      - name: lastName
        in: formData
        required: true
        type: string
      responses:
        200:
          description: 
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /auth/register
          headers:
            Content-Type: application/x-www-form-urlencoded
          body: email=mariusomoe@gmail.com&password=test&firstName=Lars&lastName=skaugvoll
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Register a new user
        x-testDescription: Register a user. This user will have "Member" rights.
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /articles/add_article:
    post:
      description: Add one new article with this user as owner
      tags:
      - Article
      operationId: 'Add article '
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        schema:
          $ref: '#/definitions/AddArticleRequest'
      responses:
        200:
          description: 
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /articles/add_article
          headers:
            Content-Type: application/json
          body: >2
